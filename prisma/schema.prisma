// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  displayName String
  email       String   @unique
  handle      String   @unique
  bio         String?
  password    String
  salt        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]
  likes       Like[]
  followers   User[]   @relation("followers")
  following   User[]   @relation("followers")
}

model Post {
  id Int @id @default(autoincrement())
  content String
  draft Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId Int
  author User @relation(fields: [authorId], references: [id])
  parentId Int?
  parent Post? @relation("comments", fields: [parentId], references: [id])
  comments Post[] @relation("comments")
  likes Like[]
}

model Like {
  id Int @id @default(autoincrement())
  postId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([postId, userId])
}